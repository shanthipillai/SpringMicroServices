<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.http.RequestEntity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.repository.AccountsRepository"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.repository.CustomerRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.mapper.CustomerMapper"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.dto.CustomerDetailsDto"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.mapper.AccountsMapper"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.dto.AccountsDto"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.service.client.LoansFeignClient"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.dto.LoansDto"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.dto.CardsDto"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.service.client.CardsFeignClient"/>
    <fullyQualifiedTypeName name="com.eazybytes.accounts.service.ICustomerService"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.apache.hc.core5.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
    <fullyQualifiedTypeName name="java.time.LocalDateTime"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.Logger"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.internal.util.logging.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="io.netty.handler.codec.http.HttpMethod"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.util.Duration"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="org.slf4j.Logger"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="java.beans.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.ratelimit.RedisRateLimiter"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.filter.ratelimit.KeyResolver"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.ratelimiter.annotation.RateLimiter"/>
</qualifiedTypeNameHistroy>
